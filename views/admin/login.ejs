<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="shortcut icon" type="image/x-icon" href="/public/admin/assets/imgs/favicon.png">
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            background-color: #f5f7fa;
            font-family: 'Inter', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
        }

        .login-container {
            width: 100%;
            max-width: 450px;
            padding: 40px;
            background: #ffffff;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            margin: 20px;
        }

        .logo-container {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo-container img {
            max-width: 120px;
            height: auto;
        }

        .login-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .login-header h2 {
            color: #1a1a1a;
            font-weight: 700;
            font-size: 24px;
            margin-bottom: 8px;
        }

        .login-header p {
            color: #6b7280;
            font-size: 14px;
            font-weight: 400;
        }

        .login-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .input-group {
            position: relative;
            display: flex;
            flex-direction: column;
        }

        .input-group label {
            margin-bottom: 8px;
            color: #1a1a1a;
            font-weight: 500;
            font-size: 14px;
        }

        .input-group input {
            padding: 12px 16px 12px 40px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 15px;
            transition: all 0.2s ease;
            background: #f9fafb;
        }

        .input-group input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            background: #ffffff;
        }

        .input-group.error input {
            border-color: #ef4444;
            background: #fef2f2;
        }

        .input-group i {
            position: absolute;
            left: 12px;
            top: 38px;
            color: #6b7280;
            font-size: 16px;
            transition: color 0.2s ease;
        }

        .input-group input:focus + i {
            color: #3b82f6;
        }

        .error-message {
            color: #ef4444;
            font-size: 12px;
            margin-top: 6px;
            display: none;
        }

        .input-group.error .error-message {
            display: block;
        }

        .login-btn {
            padding: 14px;
            background-color: #3b82f6;
            color: #ffffff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: background-color 0.2s ease, transform 0.1s ease;
            margin-top: 10px;
        }

        .login-btn:hover {
            background-color: #2563eb;
            transform: translateY(-1px);
        }

        .login-btn:active {
            transform: translateY(0);
        }

        .flash-message {
            display: flex;
            align-items: center;
            padding: 12px 16px;
            margin-bottom: 20px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            animation: fadeIn 0.3s ease-in-out;
            position: fixed;
            top: 20px;
            right: 20px;
            max-width: 400px;
            z-index: 1000;
            border-left: 4px solid;
        }

        .flash-message svg {
            width: 20px;
            height: 20px;
            margin-right: 10px;
            flex-shrink: 0;
        }

        .error-message.flash-message {
            background-color: #fef2f2;
            color: #ef4444;
            border-left-color: #ef4444;
        }

        .success-message.flash-message {
            background-color: #f0fdf4;
            color: #15803d;
            border-left-color: #15803d;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 480px) {
            .login-container {
                padding: 24px;
                margin: 16px;
            }

            .flash-message {
                max-width: 90%;
                right: 16px;
                left: 16px;
                top: 16px;
            }

            .login-header h2 {
                font-size: 20px;
            }

            .login-btn {
                font-size: 15px;
            }
        }
    </style>
</head>
<body>
    <% if (error_msg) { %>
        <div class="flash-message error-message" id="error-flash-message" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="12" y1="8" x2="12" y2="12"></line>
                <line x1="12" y1="16" x2="12.01" y2="16"></line>
            </svg>
            <span><%= error_msg %></span>
        </div>
    <% } %>
    
    <% if (success_msg) { %>
        <div class="flash-message success-message" id="success-flash-message" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                <polyline points="22 4 12 14.01 9 11.01"></polyline>
            </svg>
            <span><%= success_msg %></span>
        </div>
    <% } %>

    <div class="login-container">
        <div class="logo-container">
            <img src="/user/assets/images/menu/logo/Logo.png" alt="Zeleena Fashions Logo" class="logo-img">
        </div>
        <div class="login-header">
            <h2>Admin Login</h2>
            <p>Access your dashboard with your credentials</p>
        </div>
        
        <form class="login-form" method="post" action="/admin/login" onsubmit="return validateForm(event)">
            <div class="input-group">
                <label for="email">Email</label>
                <i class="fas fa-envelope"></i>
                <input type="email" id="email" placeholder="Enter your email" name="email" aria-describedby="email-error">
                <span class="error-message" id="email-error"></span>
            </div>
            
            <div class="input-group">
                <label for="password">Password</label>
                <i class="fas fa-lock"></i>
                <input type="password" id="password" placeholder="Enter your password" name="password" aria-describedby="password-error">
                <span class="error-message" id="password-error"></span>
            </div>
            
            <button type="submit" class="login-btn">Login</button>
        </form>
    </div>

    <script>
        function validateForm(event) {
            event.preventDefault();
            let isValid = true;

            document.querySelectorAll('.input-group').forEach(group => {
                group.classList.remove('error');
            });

            const email = document.getElementById('email').value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            const emailGroup = document.getElementById('email').parentElement;
            const emailError = document.getElementById('email-error');

            if (!email) {
                emailGroup.classList.add('error');
                emailError.textContent = 'Email is required';
                isValid = false;
            } else if (!emailRegex.test(email)) {
                emailGroup.classList.add('error');
                emailError.textContent = 'Please enter a valid email address';
                isValid = false;
            }

            const password = document.getElementById('password').value;
            const passwordGroup = document.getElementById('password').parentElement;
            const passwordError = document.getElementById('password-error');

            if (!password) {
                passwordGroup.classList.add('error');
                passwordError.textContent = 'Password is required';
                isValid = false;
            } else if (password.length < 6) {
                passwordGroup.classList.add('error');
                passwordError.textContent = 'Password must be at least 6 characters';
                isValid = false;
            }

            if (isValid) {
                event.target.submit();
            }

            return isValid;
        }

        document.getElementById('email').addEventListener('input', function() {
            const email = this.value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            const emailGroup = this.parentElement;
            const emailError = document.getElementById('email-error');

            if (!email) {
                emailGroup.classList.add('error');
                emailError.textContent = 'Email is required';
            } else if (!emailRegex.test(email)) {
                emailGroup.classList.add('error');
                emailError.textContent = 'Please enter a valid email address';
            } else {
                emailGroup.classList.remove('error');
                emailError.textContent = '';
            }
        });

        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const passwordGroup = this.parentElement;
            const passwordError = document.getElementById('password-error');

            if (!password) {
                passwordGroup.classList.add('error');
                passwordError.textContent = 'Password is required';
            } else if (password.length < 6) {
                passwordGroup.classList.add('error');
                passwordError.textContent = 'Password must be at least 6 characters';
            } else {
                passwordGroup.classList.remove('error');
                passwordError.textContent = '';
            }
        });

        function removeFlashMessage() {
            const flashMessages = document.querySelectorAll('.flash-message');
            flashMessages.forEach(flashMessage => {
                setTimeout(() => {
                    flashMessage.style.transition = 'opacity 0.3s ease-in-out';
                    flashMessage.style.opacity = '0';
                    setTimeout(() => flashMessage.remove(), 300);
                }, 4000);
            });
        }

        window.onload = () => {
            const flashMessages = document.querySelectorAll('.flash-message');
            if (flashMessages.length > 0) {
                console.log('Flash messages found:', flashMessages.length);
                removeFlashMessage();
            }
        };
    </script>
</body>
</html>