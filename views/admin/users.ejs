<%- include('../partials/admin/header') %>

<style>
    /* Define global font and color variables for consistency */
    :root {
        --font-heading: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        --font-body: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        --color-primary: #000000; /* Black */
        --color-accent: #FFD700; /* Gold */
        --color-text: #333333; /* Dark gray for body text */
        --color-muted: #666666; /* Muted gray for secondary text */
    }

    /* General Typography */
    .content-title {
        font-family: var(--font-heading);
        font-size: 1.5rem; /* 24px */
        font-weight: 700;
        line-height: 1.3;
        color: var(--color-primary);
        margin-bottom: 0.5rem;
    }

    .content-main p,
    .no-data {
        font-family: var(--font-body);
        font-size: 0.875rem; /* 14px */
        font-weight: 400;
        line-height: 1.6;
        color: var(--color-muted);
    }

    /* Search Container */
    .search-container {
        margin-bottom: 1.875rem;
    }

    .search-container form {
        display: flex;
        max-width: 31.25rem; /* 500px */
    }

    .search-container input {
        flex: 1;
        padding: 0.625rem 0.9375rem;
        border: 1px solid var(--color-primary);
        border-radius: 0.25rem 0 0 0.25rem;
        font-family: var(--font-body);
        font-size: 0.875rem; /* 14px */
        font-weight: 400;
        line-height: 1.5;
        color: var(--color-text);
    }

    .search-container input::placeholder {
        color: var(--color-muted);
    }

    .search-container button {
        background-color: var(--color-primary);
        color: var(--color-accent);
        padding: 0.625rem 1.25rem;
        border: none;
        border-radius: 0 0.25rem 0.25rem 0;
        cursor: pointer;
        font-family: var(--font-heading);
        font-size: 0.875rem; /* 14px */
        font-weight: 500;
        line-height: 1.4;
        transition: all 0.3s;
    }

    .search-container button:hover {
        background-color: var(--color-accent);
        color: var(--color-primary);
    }

    .search-container a {
        background-color: #f8f8f8;
        color: var(--color-primary);
        padding: 0.625rem 0.9375rem;
        border: 1px solid var(--color-primary);
        border-left: none;
        text-decoration: none;
        display: flex;
        align-items: center;
        font-family: var(--font-heading);
        font-size: 0.875rem; /* 14px */
        font-weight: 500;
        line-height: 1.4;
        transition: all 0.3s;
    }

    .search-container a:hover {
        background-color: var(--color-accent);
        color: var(--color-primary);
    }

    /* Users Table */
    .users-table {
        width: 100%;
        border-collapse: collapse;
        margin: 1.5rem 0;
        border: 1px solid var(--color-primary);
        font-family: var(--font-body);
        font-size: 0.875rem; /* 14px */
        line-height: 1.5;
    }

    .users-table th {
        padding: 0.9375rem;
        text-align: center;
        background-color: var(--color-primary);
        color: var(--color-accent);
        font-family: var(--font-heading);
        font-size: 0.875rem; /* 14px */
        font-weight: 600;
        line-height: 1.3;
        letter-spacing: 0.03em;
        text-transform: uppercase;
    }

    .users-table td {
        padding: 0.75rem;
        text-align: center;
        border: 1px solid #e0e0e0;
        color: var(--color-text);
        font-weight: 400;
    }

    .users-table tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .users-table tr:hover {
        background-color: #f0f0f0;
    }

    /* Action Buttons */
    .action-btn {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 0.25rem;
        cursor: pointer;
        margin-right: 0.3125rem;
        color: var(--color-accent);
        background-color: var(--color-primary);
        text-decoration: none;
        display: inline-block;
        font-family: var(--font-heading);
        font-size: 0.75rem; /* 12px */
        font-weight: 500;
        line-height: 1.3;
        transition: all 0.3s;
    }

    .delete-btn:hover {
        background-color: var(--color-accent);
        color: var(--color-primary);
    }

    /* Pagination */
    .pagination {
        margin-top: 1.875rem;
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        align-items: center;
    }

    .page-link {
        padding: 0.5rem 0.875rem;
        border: 1px solid var(--color-primary);
        text-decoration: none;
        color: var(--color-primary);
        font-family: var(--font-heading);
        font-size: 0.875rem; /* 14px */
        font-weight: 500;
        line-height: 1.4;
        border-radius: 0.25rem;
        transition: all 0.3s;
    }

    .page-link:hover {
        background-color: var(--color-primary);
        color: var(--color-accent);
    }

    .page-link.active {
        background-color: var(--color-primary);
        color: var(--color-accent);
        font-weight: 600;
    }

    /* No Data Message */
    .no-data {
        text-align: center;
        font-weight: 500;
        margin-top: 1.875rem;
        font-size: 1rem; /* 16px */
        color: var(--color-muted);
    }

    /* Spinner */
    .spinner {
        display: inline-block;
        width: 1.125rem;
        height: 1.125rem;
        border: 3px solid rgba(255, 215, 0, 0.3);
        border-radius: 50%;
        border-top-color: var(--color-accent);
        animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
        to { transform: rotate(360deg); }
    }

    /* SweetAlert2 Custom Styles */
    .gold-swal {
        border: 2px solid var(--color-accent) !important;
        font-family: var(--font-body) !important;
        font-size: 0.875rem !important; /* 14px */
    }

    .gold-confirm-btn {
        background-color: var(--color-primary) !important;
        color: var(--color-accent) !important;
        font-family: var(--font-heading) !important;
        font-size: 0.875rem !important; /* 14px */
        font-weight: 500 !important;
    }
</style>

<section class="content-main" style="background: #ffffff; padding: 1.25rem; min-height: 80vh;">
    <div class="content-header">
        <div>
            <h2 class="content-title">Users List</h2>
            <p>Users Management</p>
        </div>
    </div>

    <!-- Search Container -->
    <div class="search-container">
        <form action="/admin/users" method="GET">
            <div style="display: flex; max-width: 31.25rem;">
                <input 
                    type="text" 
                    name="query" 
                    placeholder="Search by username, email or phone..." 
                    value="<%= searchQuery || '' %>"
                >
                <button type="submit">Search</button>
                <% if (searchQuery) { %>
                    <a href="/admin/users">Clear</a>
                <% } %>
            </div>
        </form>
    </div>

    <% if (users.length > 0) { %>
        <table class="users-table">
            <thead>
                <tr>
                    <th>SL.No</th>
                    <th>User Name</th>
                    <th>Email</th>
                    <th>Contact</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% users.forEach((user, index) => { %>
                <tr id="user-row-<%= user.id %>">
                    <td><%= (currentPage - 1) * 5 + index + 1 %></td>
                    <td><%= user.userName %></td>
                    <td><%= user.email %></td>
                    <td><%= user.phone %></td>
                    <td id="status-<%= user.id %>" style="font-weight: 500; color: <%= user.status ? '#28a745' : '#dc3545' %>;">
                        <%= user.status ? "Active" : "Inactive" %>
                    </td>
                    <td>
                        <button id="block-btn-<%= user.id %>" 
                                onclick="toggleUserStatus('<%= user.id %>', '<%= user.status %>')" 
                                class="action-btn delete-btn">
                            <%= user.status ? "Block" : "UnBlock" %>
                        </button>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    <% } else { %>
        <p class="no-data">No Users found</p>
    <% } %>

    <% if (users.length > 0 && totalPages > 1) { %>
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="/admin/users?page=<%= currentPage - 1 %><%= searchQuery ? '&query=' + encodeURIComponent(searchQuery) : '' %>" class="page-link">‚Üê</a>
            <% } %>

            <% 
                const maxPagesToShow = 5;
                const halfRange = Math.floor(maxPagesToShow / 2);
                let startPage = Math.max(1, currentPage - halfRange);
                let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

                if (endPage - startPage + 1 < maxPagesToShow) {
                    startPage = Math.max(1, endPage - maxPagesToShow + 1);
                }
            %>
            <% if (startPage > 1) { %>
                <a href="/admin/users?page=1<%= searchQuery ? '&query=' + encodeURIComponent(searchQuery) : '' %>" class="page-link">1</a>
                <% if (startPage > 2) { %>
                    <span class="page-link">...</span>
                <% } %>
            <% } %>

            <% for (let i = startPage; i <= endPage; i++) { %>
                <a href="/admin/users?page=<%= i %><%= searchQuery ? '&query=' + encodeURIComponent(searchQuery) : '' %>" class="page-link <%= i === currentPage ? 'active' : '' %>">
                    <%= i %>
                </a>
            <% } %>

            <% if (endPage < totalPages) { %>
                <% if (endPage < totalPages - 1) { %>
                    <span class="page-link">...</span>
                <% } %>
                <a href="/admin/users?page=<%= totalPages %><%= searchQuery ? '&query=' + encodeURIComponent(searchQuery) : '' %>" class="page-link"><%= totalPages %></a>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <a href="/admin/users?page=<%= currentPage + 1 %><%= searchQuery ? '&query=' + encodeURIComponent(searchQuery) : '' %>" class="page-link">‚Üí</a>
            <% } %>
        </div>
    <% } %>
</section>

<%- include('../partials/admin/footer') %>

<script>
    function toggleUserStatus(userId, currentStatus) {
        Swal.fire({
            title: "Are you sure?",
            text: `Do you want to ${currentStatus ? "block" : "unblock"} this user?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#000000',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            customClass: {
                popup: 'gold-swal',
                confirmButton: 'gold-confirm-btn'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const button = document.getElementById(`block-btn-${userId}`);
                const statusCell = document.getElementById(`status-${userId}`);
                
                const originalText = button.innerHTML;
                button.innerHTML = '<div class="spinner"></div>';
                button.disabled = true;
                
                fetch(`/admin/api/block/${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    button.innerHTML = data.status ? "Block" : "UnBlock";
                    button.disabled = false;
                    statusCell.textContent = data.status ? "Active" : "Inactive";
                    statusCell.style.color = data.status ? "#28a745" : "#dc3545";
                    
                    Swal.fire({
                        title: "Success!",
                        text: `User ${data.status ? "unblocked" : "blocked"} successfully`,
                        icon: "success",
                        confirmButtonColor: "#000000",
                        customClass: {
                            popup: 'gold-swal',
                            confirmButton: 'gold-confirm-btn'
                        }
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                    button.innerHTML = originalText;
                    button.disabled = false;
                    
                    Swal.fire({
                        title: "Error!",
                        text: "Something went wrong. Please try again.",
                        icon: "error",
                        confirmButtonColor: "#000000",
                        customClass: {
                            popup: 'gold-swal',
                            confirmButton: 'gold-confirm-btn'
                        }
                    });
                });
            }
        });
    }
</script>