<%- include('../partials/admin/header') %>

<style>
  .form-control, .form-select {
    background-color: #ffffff; /* White background */
    border: 1px solid #000000; /* Black border */
    color: #000000; /* Black text */
    font-family: 'Montserrat', sans-serif;
    border-radius: 4px;
    padding: 8px 15px;
  }
  .form-control:focus, .form-select:focus {
    border-color: #FFD700; /* Gold border on focus */
    box-shadow: none;
  }
  .form-control.error, .form-select.error {
    border-color: #FFD700; /* Gold border for errors */
  }
  .text-danger {
    font-size: 0.875em;
    margin-top: 5px;
    color: #000000; /* Black text */
    font-family: 'Montserrat', sans-serif;
  }
  .input-group-text {
    background-color: #ffffff; /* White background */
    border: 1px solid #000000; /* Black border */
    border-left: none;
    color: #FFD700; /* Gold text */
    font-family: 'Montserrat', sans-serif;
    border-radius: 0 4px 4px 0;
  }
  .form-text {
    font-size: 12px;
    color: #000000; /* Black text */
    font-family: 'Montserrat', sans-serif;
    margin-top: 5px;
  }
</style>

<section class="content-main" style="background: #ffffff; padding: 60px; min-height: 90vh; max-width: 2000px; margin: 0 auto;">
  <div class="content-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
    <div>
      <h2 class="content-title" style="font-family: 'Montserrat', sans-serif; font-weight: 600; color: #000000;">Edit Coupon</h2>
      <p style="font-family: 'Montserrat', sans-serif; color: #000000;">Update coupon details</p>
    </div>
    <div>
      <button onclick="window.location.href='/admin/coupon'" 
              class="back-btn"
              style="background-color: #000000; color: #FFD700; padding: 8px 15px; border: none; border-radius: 4px; font-family: 'Montserrat', sans-serif; font-weight: 500; cursor: pointer; transition: all 0.3s;"
              onmouseover="this.style.backgroundColor='#FFD700'; this.style.color='#000000';"
              onmouseout="this.style.backgroundColor='#000000'; this.style.color='#FFD700';">
        Back to Coupons
      </button>
    </div>
  </div>

  <div class="card" style="background-color: #ffffff; border: 1px solid #000000; border-radius: 4px;">
    <div class="card-body" style="padding: 20px;">
      <div class="row">
        <div class="col-md-12">
          <form action="/admin/editcoupon/<%= coupon._id %>" method="POST" id="couponForm">
            <div class="mb-4">
              <label for="couponCode" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Coupon Code</label>
              <input 
                type="text" 
                name="couponCode" 
                id="couponCode" 
                class="form-control" 
                value="<%= coupon.code %>" 
                required
              />
              <div id="couponCodeError" class="text-danger"></div>
            </div>
            
            <div class="mb-4">
              <label for="type" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Discount Type</label>
              <select name="type" id="type" class="form-control" required>
                <option value="percentageDiscount" <%= coupon.discountType === 'percentage' ? 'selected' : '' %>>Percentage Discount</option>
                <option value="flatDiscount" <%= coupon.discountType === 'flat' ? 'selected' : '' %>>Flat Discount</option>
              </select>
              <div id="typeError" class="text-danger"></div>
            </div>
            
            <div class="mb-4">
              <label for="discount" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Discount Value</label>
              <div class="input-group">
                <input 
                  type="number" 
                  name="discount" 
                  id="discount" 
                  class="form-control" 
                  value="<%= coupon.discount %>" 
                  min="1" 
                  <%= coupon.discountType === 'percentage' ? 'max="100"' : '' %>
                  required
                />
                <span class="input-group-text" id="discountSymbol"><%= coupon.discountType === 'percentage' ? '%' : '₹' %></span>
              </div>
              <small id="discountHelp" class="form-text">
                <%= coupon.discountType === 'percentage' ? 'For percentage discount, enter a value between 1-100' : 'For flat discount, enter the amount in rupees (less than minimum purchase amount)' %>
              </small>
              <div id="discountError" class="text-danger"></div>
            </div>
            
            <div class="mb-4">
              <label for="minimumPrice" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Minimum Purchase Amount (₹)</label>
              <input 
                type="number" 
                name="minimumPrice" 
                id="minimumPrice" 
                class="form-control" 
                value="<%= coupon.minimumPrice %>" 
                min="0" 
                required
              />
              <div id="minimumPriceError" class="text-danger"></div>
            </div>
            
            <div class="mb-4">
              <label for="maxRedeem" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Maximum Redemptions</label>
              <input 
                type="number" 
                name="maxRedeem" 
                id="maxRedeem" 
                class="form-control" 
                value="<%= coupon.maxRedeem %>" 
                min="1" 
                required
              />
              <div id="maxRedeemError" class="text-danger"></div>
            </div>
            
            <div class="mb-4">
              <label for="expiry" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Expiry Date</label>
              <input 
                type="date" 
                name="expiry" 
                id="expiry" 
                class="form-control" 
                value="<%= new Date(coupon.expiry).toISOString().split('T')[0] %>" 
                required
              />
              <div id="expiryError" class="text-danger"></div>
            </div>
            
            <div class="mb-4">
              <label for="status" class="form-label" style="color: #000000; font-family: 'Montserrat', sans-serif; font-weight: 500;">Status</label>
              <select name="status" id="status" class="form-control" required>
                <option value="true" <%= coupon.status ? 'selected' : '' %>>Active</option>
                <option value="false" <%= !coupon.status ? 'selected' : '' %>>Inactive</option>
              </select>
              <div id="statusError" class="text-danger"></div>
            </div>
            
            <div class="d-grid">
              <button type="submit" 
                      class="btn"
                      style="background-color: #000000; color: #FFD700; padding: 10px; border: none; border-radius: 4px; font-family: 'Montserrat', sans-serif; font-weight: 500; transition: all 0.3s;"
                      onmouseover="this.style.backgroundColor='#FFD700'; this.style.color='#000000';"
                      onmouseout="this.style.backgroundColor='#000000'; this.style.color='#FFD700';">
                Update Coupon
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('couponForm');
  const typeSelect = document.getElementById('type');
  const discountSymbol = document.getElementById('discountSymbol');
  const discountHelp = document.getElementById('discountHelp');
  const discountInput = document.getElementById('discount');
  const minimumPriceInput = document.getElementById('minimumPrice');
  const expiryInput = document.getElementById('expiry');

  // Set minimum date for expiry to today
  const today = new Date().toISOString().split('T')[0];
  expiryInput.setAttribute('min', today);

  // Update discount symbol based on discount type
  typeSelect.addEventListener('change', function() {
    if (this.value === 'percentageDiscount') {
      discountSymbol.textContent = '%';
      discountHelp.textContent = 'For percentage discount, enter a value between 1-100';
      discountInput.setAttribute('max', '100');
      validateField(discountInput); // Re-validate discount on type change
    } else if (this.value === 'flatDiscount') {
      discountSymbol.textContent = '₹';
      discountHelp.textContent = 'For flat discount, enter the amount in rupees (less than minimum purchase amount)';
      discountInput.removeAttribute('max');
      validateField(discountInput); // Re-validate discount on type change
    }
  });

  // Form submission handler
  form.addEventListener('submit', function(event) {
    event.preventDefault();
    if (validateForm()) {
      this.submit();
    }
  });

  // Real-time validation
  const inputs = document.querySelectorAll('.form-control');
  inputs.forEach(input => {
    input.addEventListener('input', function() {
      validateField(this);
    });
  });

  function validateField(field) {
    const errorElement = document.getElementById(field.id + 'Error');
    errorElement.innerHTML = '';
    field.classList.remove('error');

    switch(field.id) {
      case 'couponCode':
        const code = field.value.trim();
        if (!code) {
          showError(field, errorElement, 'Coupon code is required');
        } else if (!/^[A-Z0-9]{6,15}$/.test(code)) {
          showError(field, errorElement, 'Code must be 6-15 uppercase letters/numbers');
        }
        break;

      case 'type':
        if (!field.value) {
          showError(field, errorElement, 'Please select a discount type');
        }
        break;

      case 'discount':
        const discount = parseFloat(field.value);
        const discountType = document.getElementById('type').value;
        const minimumPrice = parseFloat(document.getElementById('minimumPrice').value);
        if (!discount || isNaN(discount)) {
          showError(field, errorElement, 'Discount value is required');
        } else if (discountType === 'percentageDiscount' && (discount <= 0 || discount > 100)) {
          showError(field, errorElement, 'Percentage must be between 1-100');
        } else if (discountType === 'flatDiscount' && discount <= 0) {
          showError(field, errorElement, 'Flat discount must be greater than 0');
        } else if (discountType === 'flatDiscount' && discount > 10000) {
          showError(field, errorElement, 'Flat discount cannot exceed ₹10,000');
        } else if (discountType === 'flatDiscount' && !isNaN(minimumPrice) && discount >= minimumPrice) {
          showError(field, errorElement, 'Flat discount must be less than the minimum purchase amount');
        }
        break;

      case 'minimumPrice':
        const minPrice = parseFloat(field.value);
        const discountValue = parseFloat(document.getElementById('discount').value);
        const type = document.getElementById('type').value;
        if (isNaN(minPrice) || minPrice < 0) {
          showError(field, errorElement, 'Minimum amount must be 0 or greater');
        } else if (minPrice > 100000) {
          showError(field, errorElement, 'Minimum amount cannot exceed ₹100,000');
        } else if (type === 'flatDiscount' && !isNaN(discountValue) && discountValue >= minPrice) {
          showError(field, errorElement, 'Minimum purchase amount must be greater than the flat discount');
        }
        break;

      case 'maxRedeem':
        const maxRedeem = parseInt(field.value);
        if (!maxRedeem || isNaN(maxRedeem) || maxRedeem < 1) {
          showError(field, errorElement, 'Maximum redemptions must be 1 or greater');
        } else if (maxRedeem > 10000) {
          showError(field, errorElement, 'Maximum redemptions cannot exceed 10,000');
        }
        break;

      case 'expiry':
        const expiry = field.value;
        if (!expiry) {
          showError(field, errorElement, 'Expiry date is required');
        } else {
          const expiryDate = new Date(expiry);
          const todayDate = new Date(today);
          if (expiryDate < todayDate) {
            showError(field, errorElement, 'Expiry date cannot be in the past');
          }
        }
        break;

      case 'status':
        if (!field.value) {
          showError(field, errorElement, 'Please select a status');
        }
        break;
    }
  }

  function validateForm() {
    let isValid = true;
    const fields = ['couponCode', 'type', 'discount', 'minimumPrice', 'maxRedeem', 'expiry', 'status'];
    
    fields.forEach(fieldId => {
      const field = document.getElementById(fieldId);
      validateField(field);
      if (field.classList.contains('error')) {
        isValid = false;
      }
    });

    return isValid;
  }

  function showError(field, errorElement, message) {
    errorElement.innerHTML = message;
    field.classList.add('error');
  }
});
</script>

<%- include('../partials/admin/footer') %>