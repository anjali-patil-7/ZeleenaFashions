<%- include('../partials/admin/header') %>

<section class="content-main" style="background: #ffffff; padding: 20px; min-height: 80vh;">
    <div class="content-header">
        <div>
            <h2 class="content-title" style="font-family: 'Montserrat', sans-serif; font-weight: 600;">Categories</h2>
            <p style="color: #666;">Categories Management</p>
        </div>
        <a href="/admin/addcategory" class="add-category-btn" style="background-color: #000000; color: #FFD700; padding: 10px 20px; border: none; border-radius: 4px; text-decoration: none; font-family: 'Montserrat', sans-serif; font-weight: 500; transition: all 0.3s;"
           onmouseover="this.style.backgroundColor='#FFD700'; this.style.color='#000000';"
           onmouseout="this.style.backgroundColor='#000000'; this.style.color='#FFD700';">
            Add New Category
        </a>
    </div>

    <!-- Search Container -->
    <div class="search-container" style="margin-bottom: 30px;">
        <form action="/admin/categories" method="GET">
            <div style="display: flex; max-width: 500px;">
                <input 
                    type="text" 
                    name="query" 
                    placeholder="Search categories..." 
                    style="flex: 1; padding: 10px 15px; border: 1px solid #000000; border-radius: 4px 0 0 4px; font-family: 'Montserrat', sans-serif;"
                    value="<%= searchQuery || '' %>"
                >
                <button 
                    type="submit" 
                    style="background-color: #000000; color: #FFD700; padding: 10px 20px; border: none; border-radius: 0 4px 4px 0; cursor: pointer; font-family: 'Montserrat', sans-serif; font-weight: 500; transition: all 0.3s;"
                    onmouseover="this.style.backgroundColor='#FFD700'; this.style.color='#000000';"
                    onmouseout="this.style.backgroundColor='#000000'; this.style.color='#FFD700';"
                >
                    Search
                </button>
                <% if (searchQuery) { %>
                    <a 
                        href="/admin/categories" 
                        style="background-color: #f8f8f8; color: #000000; padding: 10px 15px; border: 1px solid #000000; border-left: none; text-decoration: none; display: flex; align-items: center; font-family: 'Montserrat', sans-serif;"
                    >
                        Clear
                    </a>
                <% } %>
            </div>
            <div style="display: flex; gap: 10px; margin-top: 10px;">
                <select name="sortBy" style="padding: 10px; border: 1px solid #000000; border-radius: 4px; font-family: 'Montserrat', sans-serif;">
                    <option value="createdAt" <%= sortBy === 'createdAt' ? 'selected' : '' %>>Created At</option>
                    <option value="name" <%= sortBy === 'name' ? 'selected' : '' %>>Name</option>
                </select>
                <select name="sortOrder" style="padding: 10px; border: 1px solid #000000; border-radius: 4px; font-family: 'Montserrat', sans-serif;">
                    <option value="desc" <%= sortOrder === 'desc' ? 'selected' : '' %>>Descending</option>
                    <option value="asc" <%= sortOrder === 'asc' ? 'selected' : '' %>>Ascending</option>
                </select>
            </div>
        </form>
    </div>

    <style>
        .categories-table {
            width: 100%;
            border-collapse: collapse;
            margin: 25px 0;
            border: 1px solid #000000;
            font-family: 'Montserrat', sans-serif;
        }
        
        .categories-table th {
            padding: 15px;
            text-align: center;
            background-color: #000000;
            color: #FFD700;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .categories-table td {
            padding: 12px;
            text-align: center;
            border: 1px solid #e0e0e0;
            color: #333;
        }
        
        .categories-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        
        .categories-table tr:hover {
            background-color: #f0f0f0;
        }
        
        .action-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
            color: #FFD700;
            text-decoration: none;
            display: inline-block;
            font-family: 'Montserrat', sans-serif;
            font-weight: 500;
            transition: all 0.3s;
            background-color: #000000;
        }
        
        .action-btn:hover {
            background-color: #FFD700;
            color: #000000;
        }
        
        .pagination {
            margin-top: 30px;
            display: flex;
            gap: 8px;
            justify-content: center;
            align-items: center;
        }
        
        .page-link {
            padding: 8px 14px;
            border: 1px solid #000000;
            text-decoration: none;
            color: #000000;
            font-family: 'Montserrat', sans-serif;
            border-radius: 4px;
            transition: all 0.3s;
        }
        
        .page-link:hover {
            background-color: #000000;
            color: #FFD700;
        }
        
        .page-link.active {
            background-color: #000000;
            color: #FFD700;
            font-weight: 600;
        }
        
        .no-data {
            text-align: center;
            font-weight: bold;
            margin-top: 30px;
            font-size: 18px;
            color: #666;
            font-family: 'Montserrat', sans-serif;
        }
        
        .spinner {
            display: inline-block;
            width: 18px;
            height: 18px;
            border: 3px solid rgba(255, 215, 0, 0.3);
            border-radius: 50%;
            border-top-color: #FFD700;
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .category-image {
            max-width: 60px;
            max-height: 60px;
            object-fit: cover;
            border-radius: 4px;
        }
        
        .description-cell {
            max-width: 300px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .description-cell:hover {
            white-space: normal;
            overflow: visible;
            background: #fff;
            z-index: 1;
            position: relative;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 8px;
        }
        
        .status-active {
            color: #28a745;
            font-weight: 500;
        }
        
        .status-blocked {
            color: #dc3545;
            font-weight: 500;
        }
    </style>

    <% if (categories.length > 0) { %>
        <div class="table-responsive">
            <table class="categories-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Image</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% categories.forEach(category => { %>
                        <tr id="category-row-<%= category._id %>">
                            <td><%= category.name %></td>
                            <td class="description-cell"><%= category.description %></td>
                            <td>
                                <% if (category.image) { %>
                                    <img src="/Uploads/categories/<%= category.image %>" alt="<%= category.name %>" class="category-image">
                                <% } else { %>
                                    <span>No Image</span>
                                <% } %>
                            </td>
                            <td>
                                <span id="status-<%= category._id %>" class="<%= category.status ? 'status-active' : 'status-blocked' %>">
                                    <%= category.status ? 'Active' : 'Blocked' %>
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons" style="display: flex; gap: 5px; justify-content: center;">
                                    <a href="/admin/editCategory/<%= category._id %>" class="action-btn">Edit</a>
                                    <button class="action-btn toggle-status" data-id="<%= category._id %>">
                                        <%= category.status ? 'Block' : 'Unblock' %>
                                    </button>
                                    <button class="action-btn delete-category" data-id="<%= category._id %>">Delete</button>
                                </div>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
  <% } else { %>
        <p class="no-data">No Categories found</p>
    <% } %>

    <% if (categories.length > 0 && totalPages > 1) { %>
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="/admin/categories?page=<%= currentPage - 1 %>&query=<%= encodeURIComponent(searchQuery) %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" class="page-link">‚Üê</a>
            <% } %>
            
            <% 
                const maxPagesToShow = 5;
                const halfRange = Math.floor(maxPagesToShow / 2);
                let startPage = Math.max(1, currentPage - halfRange);
                let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
                if (endPage - startPage + 1 < maxPagesToShow) {
                    startPage = Math.max(1, endPage - maxPagesToShow + 1);
                }
            %>
            <% if (startPage > 1) { %>
                <a href="/admin/categories?page=1&query=<%= encodeURIComponent(searchQuery) %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" class="page-link">1</a>
                <% if (startPage > 2) { %>
                    <span class="page-link">...</span>
                <% } %>
            <% } %>

            <% for (let i = startPage; i <= endPage; i++) { %>
                <a href="/admin/categories?page=<%= i %>&query=<%= encodeURIComponent(searchQuery) %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" class="page-link <%= i === currentPage ? 'active' : '' %>">
                    <%= i %>
                </a>
            <% } %>

            <% if (endPage < totalPages) { %>
                <% if (endPage < totalPages - 1) { %>
                    <span class="page-link">...</span>
                <% } %>
                <a href="/admin/categories?page=<%= totalPages %>&query=<%= encodeURIComponent(searchQuery) %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" class="page-link"><%= totalPages %></a>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <a href="/admin/categories?page=<%= currentPage + 1 %>&query=<%= encodeURIComponent(searchQuery) %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" class="page-link">‚Üí</a>
            <% } %>
        </div>
    <% } %>
</section>

<%- include('../partials/admin/footer') %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.toggle-status').forEach(button => {
            button.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                Swal.fire({
                    title: "Are you sure?",
                    text: `Do you want to ${this.textContent.toLowerCase()} this category?`,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: '#000000',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    customClass: {
                        popup: 'gold-swal',
                        confirmButton: 'gold-confirm-btn'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        const originalText = this.innerHTML;
                        this.innerHTML = '<div class="spinner"></div>';
                        this.disabled = true;
                        
                        fetch(`/admin/toggleCategory/${categoryId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        })
                        .then(response => {
                            if (!response.ok) throw new Error('Network response was not ok');
                            return response.json();
                        })
                        .then(data => {
                            this.innerHTML = data.status ? 'Block' : 'Unblock';
                            this.disabled = false;
                            const statusSpan = document.getElementById(`status-${categoryId}`);
                            statusSpan.textContent = data.status ? 'Active' : 'Blocked';
                            statusSpan.className = data.status ? 'status-active' : 'status-blocked';
                            statusSpan.style.color = data.status ? '#28a745' : '#dc3545';
                            
                            Swal.fire({
                                title: "Success!",
                                text: `Category ${data.status ? 'unblocked' : 'blocked'} successfully`,
                                icon: "success",
                                confirmButtonColor: "#000000",
                                customClass: {
                                    popup: 'gold-swal',
                                    confirmButton: 'gold-confirm-btn'
                                }
                            });
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            this.innerHTML = originalText;
                            this.disabled = false;
                            Swal.fire({
                                title: "Error!",
                                text: "Something went wrong. Please try again.",
                                icon: "error",
                                confirmButtonColor: "#000000",
                                customClass: {
                                    popup: 'gold-swal',
                                    confirmButton: 'gold-confirm-btn'
                                }
                            });
                        });
                    }
                });
            });
        });

        document.querySelectorAll('.delete-category').forEach(button => {
            button.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                Swal.fire({
                    title: "Are you sure?",
                    text: "Do you want to delete this category?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: '#000000',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    customClass: {
                        popup: 'gold-swal',
                        confirmButton: 'gold-confirm-btn'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/deleteCategory/${categoryId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.message) {
                                document.getElementById(`category-row-${categoryId}`).remove();
                                Swal.fire({
                                    title: "Success!",
                                    text: data.message,
                                    icon: "success",
                                    confirmButtonColor: "#000000",
                                    customClass: {
                                        popup: 'gold-swal',
                                        confirmButton: 'gold-confirm-btn'
                                    }
                                });
                            } else {
                                Swal.fire({
                                    title: "Error!",
                                    text: data.error || 'Failed to delete category',
                                    icon: "error",
                                    confirmButtonColor: "#000000",
                                    customClass: {
                                        popup: 'gold-swal',
                                        confirmButton: 'gold-confirm-btn'
                                    }
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire({
                                title: "Error!",
                                text: 'An error occurred while deleting category',
                                icon: "error",
                                confirmButtonColor: "#000000",
                                customClass: {
                                    popup: 'gold-swal',
                                    confirmButton: 'gold-confirm-btn'
                                }
                            });
                        });
                    }
                });
            });
        });
    });
</script>

<style>
    .gold-swal {
        border: 2px solid #FFD700 !important;
    }
    .gold-confirm-btn {
        background-color: #000000 !important;
        color: #FFD700 !important;
    }
</style>