<%- include('../partials/user/header') %>
<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  }

  body {
    background-color: #f8f8f8;
    color: #333;
  }

  .back-link {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    margin-top: 20px;
    text-decoration: none;
    color: #1d2951;
    font-size: 14px;
  }

  .back-link:hover {
    text-decoration: underline;
  }

  .checkout-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }

  .order-title {
    font-weight: 500;
    color: #333;
    font-size: 18px;
  }

  .amount-display {
    text-align: right;
  }

  .amount-label {
    font-size: 12px;
    color: #777;
  }

  .amount-value {
    font-weight: 600;
    font-size: 18px;
  }

  .checkout-container {
    display: flex;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    background-color: #fff;
    overflow: hidden;
  }

  .payment-methods {
    width: 30%;
    background-color: #f9f9f9;
    border-right: 1px solid #e0e0e0;
    padding: 20px 0;
  }

  .payment-option {
    display: flex;
    align-items: center;
    padding: 15px 20px;
    cursor: pointer;
  }

  .payment-option.active {
    background-color: #fff;
    border-left: 3px solid #1d2951;
  }

  .payment-icon {
    margin-right: 15px;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .payment-name {
    font-size: 14px;
  }

  .payment-details {
    width: 70%;
    padding: 30px;
    display: flex;
    flex-direction: column;
  }

  .payment-method-title {
    display: flex;
    align-items: center;
    margin-bottom: 30px;
    font-size: 16px;
    font-weight: 500;
  }

  .method-icon {
    margin-right: 10px;
  }

  .selected-indicator {
    margin-left: auto;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    border: 2px solid #1d2951;
    background-color: #1d2951;
  }

  .place-order-btn {
    margin-top: auto;
    background-color: #1d2951;
    color: white;
    padding: 12px;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .place-order-btn:hover {
    background-color: #2a3b6a;
  }

  .secure-delivery {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 20px;
    padding: 10px;
    border: 1px dashed #1d2951;
    border-radius: 4px;
    color: #1d2951;
  }

  .secure-icon {
    margin-right: 10px;
  }

  .help-chat {
    position: fixed;
    bottom: 20px;
    right: 20px;
    display: flex;
    align-items: center;
    background-color: white;
    padding: 10px 15px;
    border-radius: 20px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .help-text {
    margin-right: 10px;
    font-size: 14px;
  }

  .close-btn {
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background-color: #f0f0f0;
    cursor: pointer;
  }

  .chat-avatar {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: #f0f0f0;
    display: none;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  @media (max-width: 768px) {
    .checkout-container {
      flex-direction: column;
    }

    .payment-methods,
    .payment-details {
      width: 100%;
    }

    .payment-methods {
      border-right: none;
      border-bottom: 1px solid #e0e0e0;
    }
  }
</style>

<div class="container">
  <a href="/checkout" class="back-link">Back to Checkout</a>

  <div class="checkout-header">
    <div class="order-title">Order Amount</div>
    <div class="amount-display">
      <div class="amount-label">Total Amount</div>
      <div class="amount-value">â‚¹<%= finalPrice.toFixed(2) %></div>
    </div>
  </div>

  <input type="hidden" id="selectedPaymentMethod" value="Cash on Delivery" />
  <input type="hidden" id="orderId" value="<%= orderId %>" />

  <div class="checkout-container">
    <div class="payment-methods">
      <div class="payment-option active" data-method="Cash on Delivery">
        <div class="payment-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#1d2951" stroke-width="2">
            <path d="M21 4H3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z" />
            <path d="M1 10h22" />
          </svg>
        </div>
        <div class="payment-name">Cash on Delivery</div>
      </div>
      <div class="payment-option" data-method="Razorpay">
        <div class="payment-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#1d2951" stroke-width="2">
            <path d="M3 18v-6a9 9 0 0 0 18 0v6" />
            <path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z" />
          </svg>
        </div>
        <div class="payment-name">Razorpay</div>
      </div>
      <div class="payment-option" data-method="Wallet">
        <div class="payment-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#1d2951" stroke-width="2">
            <path d="M20 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z" />
            <circle cx="16" cy="12" r="2" />
          </svg>
        </div>
        <div class="payment-name">Wallet</div>
      </div>
    </div>

    <div class="payment-details">
      <div class="payment-method-title">
        <div class="method-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#1d2951" stroke-width="2">
            <path d="M21 4H3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z" />
            <path d="M1 10h22" />
          </svg>
        </div>
        <div id="paymentMethodName">Cash on Delivery</div>
        <div class="selected-indicator"></div>
      </div>

      <button id="placeOrderBtn" class="place-order-btn">Place Order</button>
    </div>
  </div>

  <div class="secure-delivery">
    <span class="secure-icon">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#1d2951" stroke-width="2">
        <path d="M12 2a10 10 0 0 0-10 10v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6a10 10 0 0 0-10-10z" />
        <path d="M12 16a4 4 0 0 0 4-4 4 4 0 0 0-4-4 4 4 0 0 0-4 4 4 4 0 0 0 4 4z" />
        <path d="M12 12l2 2" />
      </svg>
    </span>
    <span>Secure Payment Processing</span>
  </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const paymentOptions = document.querySelectorAll('.payment-option');
    const paymentMethodInput = document.getElementById('selectedPaymentMethod');
    const paymentMethodName = document.getElementById('paymentMethodName');
    const placeOrderBtn = document.getElementById('placeOrderBtn');
    const orderId = document.getElementById('orderId').value;

    console.log('Order ID:', orderId, 'Final Price:', <%= finalPrice %>);

    paymentOptions.forEach(option => {
      option.addEventListener('click', function () {
        paymentOptions.forEach(opt => opt.classList.remove('active'));
        this.classList.add('active');
        const method = this.dataset.method;
        paymentMethodInput.value = method;
        paymentMethodName.textContent = method;
      });
    });

    placeOrderBtn.addEventListener('click', async function () {
      const selectedMethod = paymentMethodInput.value;

      if (selectedMethod === 'Cash on Delivery') {
        if (confirm('Are you sure you want to place this order with Cash on Delivery?')) {
          try {
            const response = await fetch('/place-order', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ orderId }),
            });
            const data = await response.json();
            if (data.success) {
              window.location.href = '/order-success/' + orderId;
            } else {
              window.location.href = '/orders';
            }
          } catch (error) {
            console.error('Error placing COD order:', error);
            window.location.href = '/orders';
          }
        }
      } else if (selectedMethod === 'Razorpay') {
        try {
          console.log('Initiating Razorpay payment');
          const response = await fetch('/payment/create-razorpay-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              amount: <%= finalPrice %>,
              orderId,
            }),
          });
          const data = await response.json();
          console.log('Razorpay order response:', data);

          if (data.success) {
            const options = {
              key: data.key,
              amount: data.order.amount,
              currency: 'INR',
              name: 'Your Store Name',
              description: 'Order Payment',
              order_id: data.order.id,
              handler: async function (response) {
                console.log('Razorpay payment response:', response);
                try {
                  const verifyResponse = await fetch('/payment/verify-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                      razorpay_order_id: response.razorpay_order_id,
                      razorpay_payment_id: response.razorpay_payment_id,
                      razorpay_signature: response.razorpay_signature,
                      orderId,
                    }),
                  });
                  const verifyData = await verifyResponse.json();
                  if (verifyData.success) {
                    window.location.href = '/order-success/' + orderId;
                  } else {
                    window.location.href = '/orders';
                  }
                } catch (verifyError) {
                  console.error('Error verifying payment:', verifyError);
                  window.location.href = '/orders';
                }
              },
              prefill: {
                name: '<%= user && user.name ? user.name : "" %>',
                email: '<%= user && user.email ? user.email : "" %>',
                contact: '<%= user && user.phone ? user.phone : "" %>',
              },
              theme: {
                color: '#1d2951',
              },
              modal: {
                ondismiss: function () {
                  window.location.href = '/orders';
                },
              },
            };

            const rzp = new Razorpay(options);
            rzp.on('payment.failed', function (response) {
              console.error('Razorpay payment failed:', response.error);
              window.location.href = '/orders';
            });
            rzp.open();
          } else {
            console.error('Failed to create Razorpay order:', data.message);
            window.location.href = '/orders';
          }
        } catch (error) {
          console.error('Error initiating Razorpay payment:', error);
          window.location.href = '/orders';
        }
      } else if (selectedMethod === 'Wallet') {
        if (confirm('Are you sure you want to place this order using Wallet?')) {
          try {
            const response = await fetch('/payment/wallet-payment', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                orderId,
                userId: '<%= user && user._id ? user._id : "" %>',
              }),
            });
            if (response.redirected) {
              window.location.href = response.url;
            } else {
              window.location.href = '/orders';
            }
          } catch (error) {
            console.error('Error processing wallet payment:', error);
            window.location.href = '/orders';
          }
        }
      }
    });
  });
</script>
<%- include('../partials/user/footer') %>