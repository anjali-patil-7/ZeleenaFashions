<%- include('../partials/user/header') %>

<!-- Include SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<style>
  .checkout-container {
    background-color: #f5f5f5;
    padding: 2rem 0;
    min-height: 100vh;
  }

  .checkout-card {
    background: white;
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }

  .section-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 1rem;
  }

  .new-address-btn {
    background: white;
    color: #1d2951;
    border: 1px solid #1d2951;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .new-address-btn:hover {
    background-color: #1d2951;
    color: white;
  }

  .order-summary {
    background: #f8f8f8;
    padding: 1.5rem;
    border-radius: 8px;
  }

  .price-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
    color: #666;
  }

  .total-row {
    border-top: 1px solid #ddd;
    padding-top: 1rem;
    margin-top: 1rem;
    font-weight: bold;
    color: #333;
  }

  .proceed-btn {
    background: #595959;
    color: white;
    border: none;
    padding: 1rem;
    width: 100%;
    border-radius: 4px;
    margin-top: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .proceed-btn:hover {
    background-color: #1d2951;
  }

  .savings {
    color: #22C55E;
  }

  .address-list {
    margin-top: 1rem;
  }

  .address-item {
    background-color: #f9f9f9;
    padding: 1rem;
    border-radius: 6px;
    border: 1px solid #e0e0e0;
    transition: all 0.3s ease;
  }

  .address-item:hover {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .address-item.selected {
    border-color: #1d2951;
    box-shadow: 0 0 0 1px #1d2951;
  }

  .form-check-input:checked {
    background-color: #1d2951;
    border-color: #1d2951;
  }

  .address-divider {
    margin: 1rem 0;
    border-color: #e0e0e0;
  }

  .address-radio {
    margin-top: 0.5rem;
  }
</style>

<div class="checkout-container">
  <div class="container">
    <div class="row">
      <!-- Left Column -->
      <div class="col-lg-8">
        <!-- Delivery Address Section -->
        <div class="checkout-card">
          <div class="d-flex justify-content-between align-items-center">
            <h2 class="section-title">DELIVER TO</h2>
            <a href="/createaddress"><button class="new-address-btn">+ New Address</button></a>
          </div>
          
          <% if (userAddresses && userAddresses.length > 0) { %>
            <div class="address-list">
              <% userAddresses.forEach((addressDoc, index) => { %>
                <div class="address-item mt-2 mb-3">
                  <div class="form-check">
                    <input class="form-check-input address-radio" 
                           type="radio" 
                           name="deliveryAddress" 
                           id="address<%= addressDoc._id %>" 
                           value="<%= addressDoc._id %>"
                           <%= selectedAddressId === addressDoc._id.toString() ? 'checked' : '' %>
                           data-address-id="<%= addressDoc._id %>">
                    <label class="form-check-label" for="address<%= addressDoc._id %>">
                      <strong><%= addressDoc.name %></strong><br>
                      <%= addressDoc.houseName %>, <%= addressDoc.street %><br>
                      <%= addressDoc.city %>, <%= addressDoc.state %> <br>
                      <%= addressDoc.country %>, <%= addressDoc.pincode %><br>
                      Mobile: <%= addressDoc.mobile %>
                    </label>
                  </div>
                </div>
                <% if (index < userAddresses.length - 1) { %>
                  <hr class="address-divider">
                <% } %>
              <% }); %>
            </div>
          <% } else { %>
            <p class="text-muted">No saved address</p>
          <% } %>
        </div>
        <div id="addressRequired" data-address-required="<%= addressRequired %>"></div>
      </div>

      <!-- Right Column - Order Summary -->
      <div class="col-lg-4">
        <div class="checkout-card">
          <h2 class="section-title">ORDER SUMMARY</h2>

          <div class="order-summary">
            <div class="price-row">
              <span>Sub Total</span>
              <span>₹<%= originalSubtotal.toFixed(2) %></span>
            </div>

            <% if (discountAmount > 0) { %>
              <div class="price-row">
                <span>Discount (20% off)</span>
                <span class="savings">-₹<%= discountAmount.toFixed(2) %></span>
              </div>
            <% } %>

            <div class="price-row">
              <span>Shipping Charge</span>
              <span>₹<%= shippingCharge.toFixed(2) %></span>
            </div>

            <div class="price-row total-row">
              <span>TOTAL</span>
              <span>₹<%= finalPrice.toFixed(2) %></span>
            </div>
          </div>

          <div class="mt-4">
            <% if (cartItems && cartItems.length > 0) { %>
              <% cartItems.forEach(item => { %>
                <div class="d-flex justify-content-between align-items-center mb-3">
                  <div>
                    <h6 class="mb-0"><%= item.productId.productName %></h6>
                    <small class="text-muted">Qty: <%= item.quantity %></small>
                  </div>
                  <span>₹<%= (item.productId.price * item.quantity).toFixed(2) %></span>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-muted">Your cart is empty.</p>
            <% } %>
          </div>

          <a href="/placingorder"><button class="proceed-btn">Proceed To Buy</button></a>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include('../partials/user/footer') %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const addressRequiredElement = document.getElementById("addressRequired");
    const addressRequired = addressRequiredElement.dataset.addressRequired === "true";

    if (addressRequired) {
      Swal.fire({
        icon: "warning",
        title: "Address Required",
        text: "Please add a delivery address before proceeding to checkout.",
        confirmButtonText: "Add Address",
        confirmButtonColor: "#1d2951",
        showCancelButton: true,
        cancelButtonText: "Cancel",
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = "/createaddress";
        }
      });
    }

    // Handle address selection
    const addressRadios = document.querySelectorAll('.address-radio');
    addressRadios.forEach(radio => {
      radio.addEventListener('change', function() {
        const addressId = this.dataset.addressId;
        console.log('Selected Address ID from frontend:', addressId);
        
        document.querySelectorAll('.address-item').forEach(item => {
          item.classList.remove('selected');
        });
        
        this.closest('.address-item').classList.add('selected');
        
        fetch('/select-address', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ addressId }),
        })
        .then(response => response.json())
        .then(data => {
          console.log('Response from select-address:', data);
          if (data.success) {
            console.log('Address updated successfully, new ID:', addressId);
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message || 'Failed to update delivery address',
              confirmButtonColor: '#1d2951',
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again.',
            confirmButtonColor: '#1d2951',
          });
        });
      });
    });

    // Prevent proceeding without address
    document.querySelector('.proceed-btn').addEventListener('click', function(e) {
      const selectedAddress = document.querySelector('.address-radio:checked');
      if (!selectedAddress) {
        e.preventDefault();
        Swal.fire({
          icon: 'warning',
          title: 'No Address Selected',
          text: 'Please select a delivery address before proceeding.',
          confirmButtonColor: '#1d2951',
        });
      }
    });

    // Set selected class for initially checked address
    const checkedRadio = document.querySelector('.address-radio:checked');
    if (checkedRadio) {
      checkedRadio.closest('.address-item').classList.add('selected');
    }
  });
</script>