<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Zeleena Fashions - OTP Verification</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="shortcut icon" type="image/x-icon" href="/public/user/assets/images/favicon.png">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
        }
        
        .page-wrapper {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: url('/api/placeholder/1920/1080') no-repeat center center;
            background-size: cover;
            padding: 20px;
        }
        
        .blur-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(8px);
            z-index: 0;
        }
        
        .otp-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.2);
            padding: 40px;
            width: 100%;
            max-width: 500px;
            position: relative;
            z-index: 1;
            transition: all 0.3s ease;
        }
        
        .otp-container:hover {
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.4);
        }
        
        .login-title {
            font-weight: 600;
            color: #333;
            margin-bottom: 15px;
            text-align: center;
            font-size: 24px;
        }
        
        .otp-form {
            display: flex;
            flex-direction: column;
        }
        
        .otp-inputs-container {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin: 20px 0;
        }
        
        .otp-input {
            width: 50px !important;
            height: 50px;
            text-align: center;
            font-size: 20px;
            border-radius: 8px;
            border: 1px solid #e8e8e8;
            background-color: white;
            transition: all 0.3s;
        }
        
        .otp-input:focus {
            border-color: #1D2951;
            box-shadow: 0 0 0 0.25rem #1D2951;
            outline: none;
        }
        
        .hiraola-login_btn {
            width: 100%;
            height: 50px;
            background: linear-gradient(135deg, #1D2951 0%, #1D2951 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            margin-top: 20px;
            transition: all 0.3s;
        }
        
        .hiraola-login_btn:hover {
            background: linear-gradient(135deg, #1D2951 0%, #1D2951 100%);
            transform: translateY(-2px);
        }
        
        .hiraola-login_btn:disabled {
            background: #cccccc;
            transform: none;
            cursor: not-allowed;
        }
        
        .resend-container {
            margin-top: 15px;
            text-align: center;
        }
        
        .text-primary {
            color: #1D2951 !important;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .text-primary:hover {
            color: #1D2951 !important;
            text-decoration: underline;
        }
        
        .verify-icon {
            display: block;
            text-align: center;
            margin-bottom: 20px;
            font-size: 50px;
            color: #1D2951;
        }
        
        .brand-logo {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .brand-logo img {
            max-height: 60px;
        }
        
        .flash-message {
            display: flex;
            align-items: center;
            padding: 12px 16px;
            margin-bottom: 20px;
            border-radius: 8px;
            font-weight: 500;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            animation: fadeIn 0.3s ease-in-out;
            position: fixed;
            top: 20px;
            right: 20px;
            max-width: 300px;
            z-index: 1000;
        }
        
        .flash-message svg {
            width: 24px;
            height: 24px;
            margin-right: 12px;
            flex-shrink: 0;
        }
        
        .error-message {
            background-color: #ffebee;
            color: #d32f2f;
            border-left: 4px solid #d32f2f;
        }
        
        .success-message {
            background-color: #e8f5e9;
            color: #2e7d32;
            border-left: 4px solid #2e7d32;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <% if (error_msg && error_msg.length > 0) { %>
        <div class="flash-message error-message" id="flash-message">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="12" y1="8" x2="12" y2="12"></line>
                <line x1="12" y1="16" x2="12.01" y2="16"></line>
            </svg>
            <span><%= error_msg %></span>
        </div>
    <% } %>
  
    <% if (success_msg && success_msg.length > 0) { %>
        <div class="flash-message success-message" id="flash-message">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle">
                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                <polyline points="22 4 12 14.01 9 11.01"></polyline>
            </svg>
            <span><%= success_msg %></span>
        </div>
    <% } %>
  
    <div class="page-wrapper">
        <div class="blur-overlay"></div>
        <div class="otp-container">
            <div class="brand-logo">
                <i class="fas fa-lock verify-icon"></i>
            </div>
            
            <!-- OTP Verification Form -->
            <form action="/verifyforgotpasswordotp" method="post" id="otpForm" class="otp-form">
                <h4 class="login-title">OTP Verification</h4>
                <p class="text-center text-muted">Please enter the OTP sent to your email/phone</p>
                
                <label class="form-label">Enter OTP*</label>
                <div class="otp-inputs-container">
                    <input type="text" class="form-control otp-input" maxlength="1" data-index="0">
                    <input type="text" class="form-control otp-input" maxlength="1" data-index="1">
                    <input type="text" class="form-control otp-input" maxlength="1" data-index="2">
                    <input type="text" class="form-control otp-input" maxlength="1" data-index="3">
                    <input type="text" class="form-control otp-input" maxlength="1" data-index="4">
                    <input type="text" class="form-control otp-input" maxlength="1" data-index="5">
                </div>
                <input type="hidden" name="otp" id="otpValue">
                
                <div class="resend-container">
                    <p>Didn't receive the code? 
                        <a href="#" class="text-primary" id="resendBtn" style="display: none;">Resend OTP</a>
                        <span id="timerText" class="text-muted">Time remaining: <span id="timer">02:00</span></span>
                    </p>
                </div>
                
                <button type="submit" class="hiraola-login_btn" id="verifyButton" disabled>Verify OTP</button>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('.otp-input');
            const form = document.getElementById('otpForm');
            const verifyButton = document.getElementById('verifyButton');
            const otpValue = document.getElementById('otpValue');
            const timerElement = document.getElementById('timer');
            const resendBtn = document.getElementById('resendBtn');
            const timerText = document.getElementById('timerText');
            let timeLeft = 120; // 2 minutes
            let timerInterval;

            // Focus first input on load
            inputs[0].focus();

            // Handle input changes
            inputs.forEach((input, index) => {
                input.addEventListener('input', function(e) {
                    // Allow only numbers
                    if (isNaN(e.target.value)) {
                        e.target.value = '';
                        return;
                    }

                    // Move to next input if value is entered
                    if (e.target.value && index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    }

                    updateVerifyButton();
                });

                // Handle backspace
                input.addEventListener('keydown', function(e) {
                    if (e.key === 'Backspace') {
                        if (!e.target.value && index > 0) {
                            inputs[index - 1].focus();
                            inputs[index - 1].value = '';
                        } else {
                            e.target.value = '';
                        }
                        updateVerifyButton();
                    }
                });
            });

            // Timer functionality
            function updateTimer() {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                timerElement.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
                
                if (timeLeft === 0) {
                    resendBtn.style.display = 'inline';
                    timerText.style.display = 'none';
                    clearInterval(timerInterval);
                } else {
                    timeLeft--;
                }
            }

            // Start initial timer
            function startTimer() {
                clearInterval(timerInterval);
                timeLeft = 120;
                timerInterval = setInterval(updateTimer, 1000);
                updateTimer();
            }

            startTimer();

            // Handle resend click
            resendBtn.addEventListener('click', async function(e) {
                e.preventDefault();
                
                try {
                    const response = await fetch('/resend-forgot-otp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'include'
                    });

                    const data = await response.json();

                    if (data.status === 'success') {
                        // Reset timer and UI
                        startTimer();
                        resendBtn.style.display = 'none';
                        timerText.style.display = 'inline';
                        
                        // Clear inputs
                        inputs.forEach(input => input.value = '');
                        inputs[0].focus();
                        
                        // Update button state
                        updateVerifyButton();
                        
                        alert('OTP resent successfully');
                    } else {
                        alert(data.message || 'Failed to resend OTP');
                    }
                } catch (error) {
                    console.error('Error resending OTP:', error);
                    alert('Failed to resend OTP. Please try again.');
                }
            });

            // Update verify button state
            function updateVerifyButton() {
                const isComplete = Array.from(inputs).every(input => input.value.length === 1);
                verifyButton.disabled = !isComplete;
                if (isComplete) {
                    otpValue.value = Array.from(inputs).map(input => input.value).join('');
                }
            }

            // Handle form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                const otp = Array.from(inputs).map(input => input.value).join('');
                otpValue.value = otp;
                this.submit();
            });

            // Handle flash message removal
            function removeFlashMessage() {
                const flashMessage = document.getElementById("flash-message");
                if (flashMessage) {
                    setTimeout(() => {
                        flashMessage.remove();
                    }, 3000);
                }
            }

            window.onload = removeFlashMessage;
        });
    </script>
</body>
</html>